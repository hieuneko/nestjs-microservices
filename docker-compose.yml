version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - ./.env
    networks:
      - microservice-network
    volumes:
      - /var/lib/rabbitmq

  auth:
    build:
      context: ./
    container_name: auth
    env_file:
      - ./.env
      - ./auth/.env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth
    networks:
      - microservice-network

  product:
    build:
      context: ./
    container_name: product
    env_file:
      - ./.env
      - ./product/.env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev product
    networks:
      - microservice-network

  order:
    build:
      context: ./
    container_name: order
    env_file:
      - ./.env
      - ./order/.env
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - product
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev order
    networks:
      - microservice-network

  api:
    build:
      context: ./
    container_name: api
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - auth
      - product
      - order
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev api
    networks:
      - microservice-network
    ports:
      - '4000:5000'

  postgres_admin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    env_file:
      - ./.env
    ports:
      - '15432:80'
    networks:
      - microservice-network

  redis:
    image: redis
    container_name: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - ./.env
    ports:
      - '6379:6379'
    volumes:
      - ./redis/data:/data
    networks:
      - microservice-network

networks:
  microservice-network:
    driver: bridge

volumes:
  pgdata:
